#ifndef _SNARKLIB_EC_MNT6_INIT_FIELDS_HPP_
#define _SNARKLIB_EC_MNT6_INIT_FIELDS_HPP_

#include <snarklib/EC.hpp>
#include <snarklib/EC_MNT6_Modulus.hpp>

namespace snarklib {

////////////////////////////////////////////////////////////////////////////////
// MNT6
// initialize fields
//

// MODULUS is: modulus_r; modulus_q
template <mp_size_t N, const BigInt<N>& MODULUS>
class MNT6_InitFields : public ECInitField<N, MODULUS, MNT6_InitFields<N, MODULUS>> // CRTP
{
    typedef ECInitField<N, MODULUS, MNT6_InitFields<N, MODULUS>> BASE;

public:
    static const BigInt<MNT6_Modulus::r_limbs>& modulus_r() {
        return MNT6_Modulus::modulus_r();
    }

    static const BigInt<MNT6_Modulus::q_limbs>& modulus_q() {
        return MNT6_Modulus::modulus_q();
    }

    typedef typename BASE::Fp F;
    typedef typename BASE::Fp2 F2; // required by F6 cyclotomic_squared()
    typedef typename BASE::Fp3 F3;
    typedef typename BASE::Fp32 F6;

    static void initModulusR()
    {
        if (8 == sizeof(mp_limb_t))
        {
            F::params.Rsquared("273000478523237720910981655601160860640083126627235719712980612296263966512828033847775776");
            F::params.Rcubed("427298980065529822574935274648041073124704261331681436071990730954930769758106792920349077");
            F::params.inv(0xb071a1b67165ffff);
        }

        if (4 == sizeof(mp_limb_t))
        {
            F::params.Rsquared("273000478523237720910981655601160860640083126627235719712980612296263966512828033847775776");
            F::params.Rcubed("427298980065529822574935274648041073124704261331681436071990730954930769758106792920349077");
            F::params.inv(0x7165ffff);
        }

        F::params.num_bits(298);
        F::params.euler("237961143084630662876674624826524225772562439621347362697777564288105131408977900241879040");
        F::params.s(17);
        F::params.t("3630998887399759870554727551674258816109656366292531779446068791017229177993437198515");
        F::params.t_minus_1_over_2("1815499443699879935277363775837129408054828183146265889723034395508614588996718599257");
        F::params.multiplicative_generator("17");
        F::params.root_of_unity("264706250571800080758069302369654305530125675521263976034054878017580902343339784464690243");
        F::params.nqr("17");
        F::params.nqr_to_t("264706250571800080758069302369654305530125675521263976034054878017580902343339784464690243");
    }

    static void initModulusQ()
    {
        if (8 == sizeof(mp_limb_t))
        {
            F::params.Rsquared("163983144722506446826715124368972380525894397127205577781234305496325861831001705438796139");
            F::params.Rcubed("207236281459091063710247635236340312578688659363066707916716212805695955118593239854980171");
            F::params.inv(0xbb4334a3ffffffff);
        }

        if (4 == sizeof(mp_limb_t))
        {
            F::params.Rsquared("163983144722506446826715124368972380525894397127205577781234305496325861831001705438796139");
            F::params.Rcubed("207236281459091063710247635236340312578688659363066707916716212805695955118593239854980171");
            F::params.inv(0xffffffff);
        }

        F::params.num_bits(298);
        F::params.euler("237961143084630662876674624826524225772562439276411757776633867869582323653704245279981568");
        F::params.s(34);
        F::params.t("27702323054502562488973446286577291993024111641153199339359284829066871159442729");
        F::params.t_minus_1_over_2("13851161527251281244486723143288645996512055820576599669679642414533435579721364");
        F::params.multiplicative_generator("10");
        F::params.root_of_unity("120638817826913173458768829485690099845377008030891618010109772937363554409782252579816313");
        F::params.nqr("5");
        F::params.nqr_to_t("406220604243090401056429458730298145937262552508985450684842547562990900634752279902740880");

        F3::params.euler("53898680178554951715397245154796036139463891589001478629193136369124915637741423690184935056189295242736833704290747216410090671804540908400210778934462129625646263095398323485795557551284190224166851571615834194321908328559167529729507439069424158411618728014749106176");
        F3::params.s(34);
        F3::params.t("6274632199033507112809136178669989590936327770934612330653836993631547740397674926811006741620285348354004521888069251599964996777072188956687550402067383940523288107407084140669968625447269322370045302856694231080113482726640944570478452261237446033817102203");
        F3::params.t_minus_1_over_2("3137316099516753556404568089334994795468163885467306165326918496815773870198837463405503370810142674177002260944034625799982498388536094478343775201033691970261644053703542070334984312723634661185022651428347115540056741363320472285239226130618723016908551101");
        F3::params.non_residue("5");
        F3::params.nqr("5", "0", "0");
        F3::params.nqr_to_t("154361449678783505076984156275977937654331103361174469632346230549735979552469642799720052", "0", "0");
        F3::params.Frobenius_coeffs_c1(0, "1");
        F3::params.Frobenius_coeffs_c1(1, "471738898967521029133040851318449165997304108729558973770077319830005517129946578866686956");
        F3::params.Frobenius_coeffs_c1(2, "4183387201740296620308398334599285547820769823264541783190415909159130177461911693276180");
        F3::params.Frobenius_coeffs_c2(0, "1");
        F3::params.Frobenius_coeffs_c2(1, "4183387201740296620308398334599285547820769823264541783190415909159130177461911693276180");
        F3::params.Frobenius_coeffs_c2(2, "471738898967521029133040851318449165997304108729558973770077319830005517129946578866686956");

        F6::params.non_residue("5");
        F6::params.Frobenius_coeffs_c1(0, "1");
        F6::params.Frobenius_coeffs_c1(1, "471738898967521029133040851318449165997304108729558973770077319830005517129946578866686957");
        F6::params.Frobenius_coeffs_c1(2, "471738898967521029133040851318449165997304108729558973770077319830005517129946578866686956");
        F6::params.Frobenius_coeffs_c1(3, "475922286169261325753349249653048451545124878552823515553267735739164647307408490559963136");
        F6::params.Frobenius_coeffs_c1(4, "4183387201740296620308398334599285547820769823264541783190415909159130177461911693276180");
        F6::params.Frobenius_coeffs_c1(5, "4183387201740296620308398334599285547820769823264541783190415909159130177461911693276181");
        F2::params.non_residue(F3::params.non_residue()); // F6 cyclotomic_squared()
    }
};

} // namespace snarklib

#endif
